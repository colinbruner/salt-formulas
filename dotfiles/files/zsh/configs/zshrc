# .zshrc

# Source plugin mgr
source $HOME/.config/zsh/antigen.zsh

# Load plugins
source $HOME/.zsh.d/antigen.zsh

##########
# System #
##########
GLOBAL_BIN="/app/bin"
USER_BIN="$HOME/.bin:$HOME/.local/bin"
export PATH="/usr/local/bin:/usr/bin:/bin"
export PATH="${PATH}:${GLOBAL_BIN}:${USER_BIN}"

# Vi mode
bindkey -v
bindkey '^R' history-incremental-search-backward

autoload -Uz compinit && compinit
autoload -U promptinit; promptinit

zstyle ':completion:*' list-colors "=(#b) #([0-9]#)*=36=31"
zstyle ':completion:*' hosts off

# Source work things first, if file exists.
if [[ -f ~/.zsh.d/work.zsh ]] then 
    source ~/.zsh.d/work.zsh
    export JUMPHOST="resjump1-brn1"
fi

############################
## Source additional files #
############################
# Common things
source $HOME/.zsh.d/aliases.zsh
source $HOME/.zsh.d/functions.zsh
source $HOME/.zsh.d/exports.zsh
source $HOME/.zsh.d/secrets.zsh
# Code Related Files
source $HOME/.zsh.d/python.zsh
source $HOME/.zsh.d/go.zsh
source $HOME/.zsh.d/rust.zsh

if [[ `uname` == 'Darwin' ]]; then
    source $HOME/.zsh.d/osx.zsh
fi

##########
# Widgets
##########
if $(command -v navi &>/dev/null); then
    source "$(navi widget zsh)"
fi

##################
## Login Scripts #
##################
# Check to see if agent is running, 1 for no identities added, 0 for identities added
ssh-add -l &>/dev/null 
if [[ $? != 0 ]]; then
  # Automatically start SSH Agent on boot when no previous .agent.env file is found
  if [[ -f ~/.agent.env ]]; then
      . ~/.agent.env > /dev/null
      if ! kill -0 $SSH_AGENT_PID > /dev/null 2>&1; then
          echo "Stale agent file found. Spawning new agentâ€¦ "
          eval `ssh-agent | tee ~/.agent.env`
          ssh-add
          for key in $HOME/.ssh/*; do if [[ $key != *"pub" ]] && [[ $key == *"id_"* ]]; then ssh-add $key; fi; done
      fi
  else
      echo "Starting ssh-agent"
      eval `ssh-agent | tee ~/.agent.env`
      ssh-add
      for key in $HOME/.ssh/*; do if [[ $key != *"pub" ]] && [[ $key == *"id_"* ]]; then ssh-add $key; fi; done
  fi
fi

# Predictable SSH authentication socket location.
SOCK="/tmp/ssh-agent-$USER-screen"
if test $SSH_AUTH_SOCK && [ $SSH_AUTH_SOCK != $SOCK ];then
    rm -f /tmp/ssh-agent-$USER-screen
    ln -sf $SSH_AUTH_SOCK $SOCK
    export SSH_AUTH_SOCK=$SOCK
fi
